{"version":3,"sources":["Components/Button/Button.jsx","Components/PropTypes/buttonPropTypes.jsx","Components/Clock/Clock.jsx","Components/PropTypes/clockPropTypes.jsx","App.js","index.js"],"names":["Button","PropTypes","func","isRequired","hide","show","changeName","className","type","onClick","Clock","number","state","date","Date","toLocaleTimeString","isVisible","setDate","setState","this","timer","setInterval","console","log","prevProps","props","clockName","clearInterval","React","Component","App","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"+NAqCeA,GClCPC,IAAUC,KAAKC,WACTF,IAAUC,KAAKC,WACrBF,IAAUC,KAAKC,WDFR,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,WAAf,OACb,yBAAKC,UAAU,yBACb,4BACEA,UAAU,cACVC,KAAK,SACLC,QAAS,WACPJ,MAJJ,aASA,4BACEE,UAAU,cACVC,KAAK,SACLC,QAAS,WACPL,MAJJ,aASA,4BACEG,UAAU,cACVC,KAAK,SACLC,QAAS,WACPH,MAJJ,kBEnBSI,GCDAT,IAAUU,OAAOR,WAChBF,IAAUC,KAAKC,WDA7B,4MACES,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,WAAW,GAHf,EA2BEC,QAAU,WACR,EAAKC,SAAS,CAAEL,MAAM,IAAIC,MAAOC,wBA5BrC,EA+BEX,KAAO,WACL,EAAKc,SAAS,CAAEF,WAAW,KAhC/B,EAmCEX,KAAO,WACL,EAAKa,SAAS,CAAEF,WAAW,KApC/B,uDAME,WAAqB,IAAD,OAClBG,KAAKC,MAAQC,aAAY,WACnB,EAAKT,MAAMI,YACb,EAAKC,UAELK,QAAQC,IAAI,EAAKX,MAAMC,SAExB,OAbP,gCAgBE,SAAmBW,GACbL,KAAKM,MAAMC,YAAcF,EAAUE,WAErCJ,QAAQC,IAAR,qCAA0CC,EAAUE,UAApD,eAAoEP,KAAKM,MAAMC,cAnBrF,kCAuBE,WACEC,cAAcR,KAAKC,SAxBvB,oBAuCE,WACE,IAAQd,EAAea,KAAKM,MAApBnB,WAER,OACE,oCACGa,KAAKP,MAAMI,UACV,uBACET,UAAU,qBADZ,wBAGoBY,KAAKP,MAAMC,OAG5B,uBAAGN,UAAU,aAAb,oBACL,kBAAC,EAAD,CAAQH,KAAMe,KAAKf,KAAMC,KAAMc,KAAKd,KAAMC,WAAYA,SApD9D,GAA2BsB,IAAMC,YEqBlBC,E,4MApBblB,MAAQ,CACNc,UAAW,G,EAGbpB,WAAa,WACX,EAAKY,SAAS,CAAEQ,UAAWK,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAG7C,WACE,OACE,yBAAK1B,UAAU,OACb,2CACA,kBAAC,EAAD,CACEmB,UAAWP,KAAKP,MAAMc,UACtBpB,WAAYa,KAAKb,kB,GAfTsB,IAAMC,WCAxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cfccce8e.chunk.js","sourcesContent":["import React from 'react';\nimport testPropTypes from '../PropTypes/buttonPropTypes';\n\nconst Button = ({ hide, show, changeName }) => (\n  <div className=\"App__button-container\">\n    <button\n      className=\"App__button\"\n      type=\"button\"\n      onClick={() => {\n        show();\n      }}\n    >\n      Show time\n    </button>\n    <button\n      className=\"App__button\"\n      type=\"button\"\n      onClick={() => {\n        hide();\n      }}\n    >\n      Stop time\n    </button>\n    <button\n      className=\"App__button\"\n      type=\"button\"\n      onClick={() => {\n        changeName();\n      }}\n    >\n      Change name\n    </button>\n  </div>\n);\n\nButton.propTypes = testPropTypes;\n\nexport default Button;\n","import PropTypes from 'prop-types';\n\nconst testPropTypes = {\n  hide: PropTypes.func.isRequired,\n  changeName: PropTypes.func.isRequired,\n  show: PropTypes.func.isRequired,\n};\n\nexport default testPropTypes;\n","import React from 'react';\nimport Button from '../Button/Button';\nimport { clockPropTypes } from '../PropTypes/clockPropTypes';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n    isVisible: true,\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      if (this.state.isVisible) {\n        this.setDate();\n        // eslint-disable-next-line\n        console.log(this.state.date);\n      }\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  setDate = () => {\n    this.setState({ date: new Date().toLocaleTimeString() });\n  }\n\n  hide = () => {\n    this.setState({ isVisible: false });\n  }\n\n  show = () => {\n    this.setState({ isVisible: true });\n  }\n\n  render() {\n    const { changeName } = this.props;\n\n    return (\n      <>\n        {this.state.isVisible ? (\n          <p\n            className=\"App__current-time\"\n          >\n            {`Current time: ${this.state.date}`}\n          </p>\n        )\n          : (<p className=\"destroyed\">Time was stopped</p>) }\n        <Button hide={this.hide} show={this.show} changeName={changeName} />\n      </>\n    );\n  }\n}\n\nClock.propTypes = clockPropTypes;\n","import PropTypes from 'prop-types';\n\nexport const clockPropTypes = {\n  clockName: PropTypes.number.isRequired,\n  changeName: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    clockName: 0,\n  }\n\n  changeName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 100000) });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <Clock\n          clockName={this.state.clockName}\n          changeName={this.changeName}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}