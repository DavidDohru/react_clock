{"version":3,"sources":["App.js","index.js"],"names":["App","state","time","Date","toLocaleTimeString","isClockVisible","clockName","this","interval","setInterval","console","log","setState","clearInterval","className","onClick","type","randomName","Math","floor","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uMAiFeA,G,kNA7EbC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,gBAAgB,EAChBC,UAAW,K,uDAGb,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WACtB,EAAKR,MAAMI,gBAEbK,QAAQC,IAAI,EAAKV,MAAMC,MAGzB,EAAKU,SAAS,CAAEV,MAAM,IAAIC,MAAOC,yBAChC,O,kCAGL,WACES,cAAcN,KAAKC,Y,oBAGrB,WAAU,IAAD,OAaP,OACE,yBAAKM,UAAU,OACb,2CAEAP,KAAKN,MAAMI,eAGP,oCACE,sDAEOE,KAAKN,MAAMC,QAIpB,uBAAGY,UAAU,aAAb,oBACJ,yBAAKA,UAAU,yBACb,4BACEA,UAAU,cACVC,QAAS,kBAAM,EAAKH,SAAS,CAAEP,gBAAgB,KAC/CW,KAAK,UAHP,aAOA,4BACEF,UAAU,cACVC,QAAS,kBAAM,EAAKH,SAAS,CAAEP,gBAAgB,KAC/CW,KAAK,UAHP,cAOA,4BACEF,UAAU,cACVC,QA5CW,WAGjB,GAAI,EAAKd,MAAMI,eAAgB,CAC7B,IAAMY,EAAaC,KAAKC,MAHd,IAGoBD,KAAKE,UAEnCV,QAAQC,IAAI,qCAA8B,EAAKV,MAAMK,UAAzC,kBACJW,IACR,EAAKL,SAAS,CAAEN,UAAWW,MAqCvBD,KAAK,UAHP,qB,GAjEQK,IAAMC,YCCxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4893b176.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n    isClockVisible: true,\n    clockName: 10000,\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      if (this.state.isClockVisible) {\n        // eslint-disable-next-line\n        console.log(this.state.time);\n      }\n\n      this.setState({ time: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const changeName = () => {\n      const max = 100000;\n\n      if (this.state.isClockVisible) {\n        const randomName = Math.floor(Math.random() * max);\n        // eslint-disable-next-line\n        console.log(`The Clock was renamed from ${this.state.clockName} `+\n          `to ${randomName}`);\n        this.setState({ clockName: randomName });\n      }\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>React Clock</h1>\n        {\n        this.state.isClockVisible\n\n          ? (\n            <>\n              <p>\n                Current time:\n                {` ${this.state.time}`}\n              </p>\n            </>\n          )\n          : <p className=\"destroyed\">Time was stopped</p>}\n        <div className=\"App__button-container\">\n          <button\n            className=\"App__button\"\n            onClick={() => this.setState({ isClockVisible: false })}\n            type=\"submit\"\n          >\n            Stop Time\n          </button>\n          <button\n            className=\"App__button\"\n            onClick={() => this.setState({ isClockVisible: true })}\n            type=\"submit\"\n          >\n            Start Time\n          </button>\n          <button\n            className=\"App__button\"\n            onClick={changeName}\n            type=\"submit\"\n          >\n            Change name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}