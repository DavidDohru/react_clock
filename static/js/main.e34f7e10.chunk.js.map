{"version":3,"sources":["Components/Button/Button.jsx","Components/Clock/Clock.jsx","App.js","index.js"],"names":["Button","name","callback","type","onClick","Clock","state","date","Date","toLocaleTimeString","this","timer","setInterval","setState","console","log","prevProps","props","clockName","clearInterval","className","React","Component","App","isVisible","changeName","randomName","Math","random","toFixed","hideTime","showTime","ReactDOM","render","document","getElementById"],"mappings":"4NAiBeA,G,MAdA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACb,4BACEC,KAAK,SACLC,QAASF,GAERD,KCJQI,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAVP,gCAaE,SAAmBS,GACbN,KAAKO,MAAMC,YAAcF,EAAUE,WAErCJ,QAAQC,IAAR,qCAA0CC,EAAUE,UAApD,eAAoER,KAAKO,MAAMC,cAhBrF,kCAoBE,WACEC,cAAcT,KAAKC,SArBvB,oBAwBE,WACE,OACE,yBAAKS,UAAU,SACb,wBAAIA,UAAU,gBAAd,eACA,2CAEG,IACAV,KAAKJ,MAAMC,WA/BtB,GAA2Bc,IAAMC,YCmDlBC,E,4MAhDbjB,MAAQ,CACNL,KAAM,EACNuB,WAAW,G,EAGbC,WAAa,WACX,GAAI,EAAKnB,MAAMkB,UAAW,CACxB,IAAME,GAA8B,IAAhBC,KAAKC,UAAmBC,QAAQ,GAEpD,EAAKhB,SAAS,CAAEZ,KAAMyB,M,EAI1BI,SAAW,WACT,EAAKjB,SAAS,CAAEW,WAAW,K,EAG7BO,SAAW,WACT,EAAKlB,SAAS,CAAEW,WAAW,K,4CAG7B,WACE,OACE,yBAAKJ,UAAU,OACZV,KAAKJ,MAAMkB,UAEV,kBAAC,EAAD,CAAON,UAAWR,KAAKJ,MAAML,OAE1B,uBAAGmB,UAAU,aAAb,oBACL,yBAAKA,UAAU,yBACb,kBAAC,EAAD,CACEnB,KAAK,YACLC,SAAUQ,KAAKqB,WAEjB,kBAAC,EAAD,CACE9B,KAAK,YACLC,SAAUQ,KAAKoB,WAEjB,kBAAC,EAAD,CACE7B,KAAK,cACLC,SAAUQ,KAAKe,mB,GAzCTJ,IAAMC,WCFxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e34f7e10.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ name, callback }) => (\n  <button\n    type=\"button\"\n    onClick={callback}\n  >\n    {name}\n  </button>\n);\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <h1 className=\"clock__title\">React Clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.date}\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport Button from './Components/Button/Button';\n\nimport { Clock } from './Components/Clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    name: 0,\n    isVisible: true,\n  };\n\n  changeName = () => {\n    if (this.state.isVisible) {\n      const randomName = (Math.random() * 100000).toFixed(0);\n\n      this.setState({ name: randomName });\n    }\n  };\n\n  hideTime = () => {\n    this.setState({ isVisible: false });\n  };\n\n  showTime = () => {\n    this.setState({ isVisible: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isVisible ? (\n\n          <Clock clockName={this.state.name} />\n        )\n          : (<p className=\"destroyed\">Time was stopped</p>) }\n        <div className=\"App__container-button\">\n          <Button\n            name=\"Show time\"\n            callback={this.showTime}\n          />\n          <Button\n            name=\"Hide time\"\n            callback={this.hideTime}\n          />\n          <Button\n            name=\"Change Name\"\n            callback={this.changeName}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}