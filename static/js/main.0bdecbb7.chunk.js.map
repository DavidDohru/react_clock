{"version":3,"sources":["Components/ButtonHideTime/ButtonHideTime.jsx","Components/ButtonShowTime/ButtonShowTime.jsx","Components/ButtonChangeName/ButtonChangeName.jsx","Components/Clock/Clock.jsx","App.js","index.js"],"names":["ButtonHideTime","hide","className","type","onClick","ButtonShowTime","show","ButtonChangeName","changeName","Clock","state","date","Date","toLocaleTimeString","this","timer","setInterval","setState","console","log","clearInterval","React","Component","App","name","isVisible","randomName","Math","random","toFixed","hideTime","showTime","ReactDOM","render","document","getElementById"],"mappings":"iRAoBeA,G,YAhBQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACrB,yBAAKC,UAAU,qBACb,4BACEA,UAAU,cACVC,KAAK,SACLC,QAASH,GAHX,gBCWWI,EAdQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACrB,4BACEJ,UAAU,cACVC,KAAK,SACLC,QAASE,GAHX,cCaaC,EAdU,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACvB,4BACEN,UAAU,cACVC,KAAK,SACLC,QAASI,GAHX,gBCDWC,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAVP,kCAaE,WACES,cAAcN,KAAKC,SAdvB,oBAiBE,WACE,OACE,yBAAKb,UAAU,SACb,wBAAIA,UAAU,gBAAd,eACA,2CAEG,IACAY,KAAKJ,MAAMC,WAxBtB,GAA2BU,IAAMC,YC+ClBC,E,4MAzCbb,MAAQ,CACNc,KAAM,EACNC,WAAW,G,EAGbjB,WAAa,WACX,GAAI,EAAKE,MAAMe,UAAW,CACxB,IAAMC,GAA8B,IAAhBC,KAAKC,UAAmBC,QAAQ,GAEpD,EAAKZ,SAAS,CAAEO,KAAME,IAEtBR,QAAQC,IAAR,qCAA0C,EAAKT,MAAMc,KAArD,eAAgEE,M,EAIpEI,SAAW,WACT,EAAKb,SAAS,CAAEQ,WAAW,K,EAG7BM,SAAW,WACT,EAAKd,SAAS,CAAEQ,WAAW,K,4CAG7B,WACE,OACE,yBAAKvB,UAAU,OACZY,KAAKJ,MAAMe,UAEV,kBAAC,EAAD,MAEG,uBAAGvB,UAAU,aAAb,oBACL,yBAAKA,UAAU,yBACb,kBAAC,EAAD,CAAgBI,KAAMQ,KAAKiB,WAC3B,kBAAC,EAAD,CAAgB9B,KAAMa,KAAKgB,WAC3B,kBAAC,EAAD,CAAkBtB,WAAYM,KAAKN,mB,GAnC3Ba,IAAMC,WCJxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.0bdecbb7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ButtonHideTime.scss';\n\nconst ButtonHideTime = ({ hide }) => (\n  <div className=\"button__container\">\n    <button\n      className=\"App__button\"\n      type=\"button\"\n      onClick={hide}\n    >\n      Stop time\n    </button>\n  </div>\n);\n\nButtonHideTime.propTypes = {\n  hide: PropTypes.func.isRequired,\n};\n\nexport default ButtonHideTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ButtonShowTime = ({ show }) => (\n  <button\n    className=\"App__button\"\n    type=\"button\"\n    onClick={show}\n  >\n    Show time\n  </button>\n);\n\nButtonShowTime.propTypes = {\n  show: PropTypes.func.isRequired,\n};\n\nexport default ButtonShowTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ButtonChangeName = ({ changeName }) => (\n  <button\n    className=\"App__button\"\n    type=\"button\"\n    onClick={changeName}\n  >\n    Change name\n  </button>\n);\n\nButtonChangeName.propTypes = {\n  changeName: PropTypes.func.isRequired,\n};\n\nexport default ButtonChangeName;\n","import React from 'react';\nimport './Clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <h1 className=\"clock__title\">React Clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.date}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport ButtonHideTime from './Components/ButtonHideTime/ButtonHideTime';\nimport ButtonShowTime from './Components/ButtonShowTime/ButtonShowTime';\nimport ButtonChangeName from './Components/ButtonChangeName/ButtonChangeName';\n\nimport { Clock } from './Components/Clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    name: 0,\n    isVisible: true,\n  };\n\n  changeName = () => {\n    if (this.state.isVisible) {\n      const randomName = (Math.random() * 100000).toFixed(0);\n\n      this.setState({ name: randomName });\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${this.state.name} to ${randomName}`);\n    }\n  };\n\n  hideTime = () => {\n    this.setState({ isVisible: false });\n  };\n\n  showTime = () => {\n    this.setState({ isVisible: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isVisible ? (\n\n          <Clock />\n        )\n          : (<p className=\"destroyed\">Time was stopped</p>) }\n        <div className=\"App__container-button\">\n          <ButtonHideTime show={this.showTime} />\n          <ButtonShowTime hide={this.hideTime} />\n          <ButtonChangeName changeName={this.changeName} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}